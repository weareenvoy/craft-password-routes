<?php
namespace weareenvoy\passwordroutes;


use craft\base\Plugin;
use craft\events\RegisterUrlRulesEvent;
use craft\web\UrlManager;
use weareenvoy\passwordroutes\services\Authentication;
use weareenvoy\passwordroutes\services\Routes;
use yii\base\ActionEvent;
use yii\base\Event;
use yii\base\Controller;

class PasswordRoutes extends Plugin
{
    public $hasCpSection = true;
    /**
     *
     */
    public function init()
    {
        $this->setComponents([
            'authentication' => Authentication::class,
            'routes' => Routes::class
        ]);

        Event::on(Controller::class,Controller::EVENT_BEFORE_ACTION, function(ActionEvent $event){
            //Check if auth is required
            $passwordRoutes = PasswordRoutes::getInstance();

            if($passwordRoutes->authentication->isLoginRequired()){
                //Query
                $queryArr = [
                    'routeId' => $passwordRoutes->authentication->getMatchedRoute()->id,
                    'redirectTo' => \Craft::$app->request->url
                ];

                $query = http_build_query($queryArr);
                \Craft::$app->getResponse()->redirect('passwordroutes/login?'.$query);
                \Craft::$app->end();
            }
        });

        Event::on(UrlManager::class, UrlManager::EVENT_REGISTER_CP_URL_RULES, function(RegisterUrlRulesEvent $event) {
            $event->rules['passwordroutes/route/new'] = 'passwordroutes/routes/edit-route';
            $event->rules['passwordroutes/route/<routeId:\d+>'] = 'passwordroutes/routes/edit-route';
            $event->rules['passwordroutes'] = 'passwordroutes/routes/index';
        });

        Event::on(UrlManager::class, UrlManager::EVENT_REGISTER_SITE_URL_RULES, function(RegisterUrlRulesEvent $event) {
            $event->rules['passwordroutes/login'] = 'passwordroutes/routes/login';
        });

        parent::init(); // TODO: Change the autogenerated stub
    }


}